normales <-rnorm(100,1,2)
curve(normales)
normales
plot(normales)
nll <- make.NeglogLik(normales)
nll <- make.NegLogLik(normales)
nll(c(1,2))
nll(c(12,2))
nll
optim(c(mu=0, sigma=1),nll)
lengt(normales)
length(normales)
-0.5*length(data)*log(2*pi*sigma^2)
-0.5*length(data)*log(2*pi*1.787343 ^2)
mu=1.787343
mu <- 1.218239
sigma <- 1.787343
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
data - mu
mu <- c(1.787343)
data - mu
sum(data - mu)
data
b <- -0.5*sum((normales- mu)^2) / (sigma^2)
a
b
-(a+b)
mu <- c(2.787343)
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((normales- mu)^2) / (sigma^2)
-(a+b)
mu <- c(0.787343)
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((normales- mu)^2) / (sigma^2)
-(a+b)
mu <- c(0.57343)
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((normales- mu)^2) / (sigma^2)
-(a+b)
mu <- c(1)
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((normales- mu)^2) / (sigma^2)
-(a+b)
plot(x, exp(-(y - min(y))), type = "l")
Plotting the Likelihood
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <- seq(1.7, 1.9, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
Plotting the Likelihood
nLL <- make.NegLogLik(normales, c(1, FALSE))
x <- seq(1.7, 1.9, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
y
plot(x, exp(-(y - min(y))))
plot(x, y)
plot(x, y, type = "l")
Plotting the Likelihood
nLL <- make.NegLogLik(normales)
nLL <- make.NegLogLik(normales)
x <- seq(1.7, 1.9, len = 100)
y <- sapply(x, nLL)
plot(x,y,type="l")
plot(x, exp(-(y - min(y))), type = "l")
x <- seq(1, 3, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
plot(x, y, type = "l")
? exp
exp(10)
z=seq(0:10, len=100)
z=seq(0,10, len=100)
z1=sapply(exp(),z)
z1=sapply(z,exp())
exp(z)
plot(z,exp(z),type="l")
install.packages("KernSmooth")
install.package("KernSmooth")
install.packages("KernSmooth")
install.packages("KernSmooth")
library ("KernSmooth")
matr <- list (1:9,nrow=3, ncol=3)
matr
matr <- list (1:9,nrows=3, ncols=3)
matr
matr <- matrix (1:9,nrow=3, ncol=3)
matrr
matr
solve(matr)
matr <- matrix (c(1,0,0,0,1,0,0,0,1) ,nrow=3, ncol=3)
solve(matr)
matr <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
matr
solve(matr)
source('~/.active-rstudio-document')
myvector <- c(1,2,3,4,5)
makevector(x)
xcached <-makeVector(x)
xcached
x
x
myvector <- c(1,2,3,4,5)
xcached<-makeVector(myvector)
xcached
xcached$set
xcached$set(myvector)
xcached<-makeVector()
xcached$set(myvector)
cachedInvertedMatrix <- NULL
is.na(cachedInvertedMatrix)
is.null(cachedInvertedMatrix)
!is.null(cachedInvertedMatrix)
# return the (now) cached matrix
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
mymatr <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myccc <-makeCacheMatrix()
myccc$set(mymatr)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc$set(mymatr)
mymatr$get
mymatr$get()
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$get
myccc$get()
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc$getInverted()
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$getInverted()
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$getInverted()
myccc$getInverted()
myccc$getInverted()
myccc <-makeCacheMatrix(xxxxx)
xxxx
xxxxx
xxxxx
myccc <-makeCacheMatrix(xxxxx)
myccc$getInverted()
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myccc$getInverted()
myccc$getInverted()
myccc$getInverted()
inin<-myccc$getInverted()
myccc <-makeCacheMatrix(inin)
myccc$getInverted()
inin
inin$nrow
inin$nrows
inin.nrow
inin
attributes(inin)
inin$dim
inin.dim
inin$dim
attributes(inin)$dim
attributes(inin)$dim[1]
attributes(inin)$dim[1] = attributes(inin)$dim[2]
attributes(inin)$dim[1] == attributes(inin)$dim[2]
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3,0,0,4) ,nrow=4, ncol=3)
attributes(xxxxx)
myccc <-makeCacheMatrix(xxxxx)
myccc$set()
myccc$set(xxxxx)
myccc$get()
myccc$getInverted()
myccc$get()
n
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted()
myccc$getInverted(xxxxx)
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted(xxxxx)
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted()
function (a, b, ...)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3,0,0,4) ,nrow=4, ncol=3)
myccc <-makeCacheMatrix(xxxxx)
myccc$getInverted()
myccc$get()
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3
)
myCalculation <-makeCacheMatrix(myMatrix)
myCalculation$getInverted()
myCalculation$getInverted()
solve
solve()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myCalculation <-makeCacheMatrix(myMatrix)
myCalculation$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
debug(cacheSolve)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheMatrix
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
debug(cacheSolve)
cacheSolve(cacheMatrix)
debug (makeCacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/cache.R')
z<-c(1,2,3)
zvec<-makeVector(z)
cachemean(zvec)
cachemean(zvec)
cachemean(zvec)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
library(datasets)
data(iris)
iris
head iris
head(iris)
? iris
colMeans(iris)
colMeans(iris["Sepal.Length"])
iris["Sepal.Length"]
mean(iris["Sepal.Length"])
means(iris["Sepal.Length"])
sum(iris["Sepal.Length"])
876.5/150
head(iris)
colmeans(iris)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
? mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
split(mtcars, mtcars$cyl,mtcars$mpg)
split(mtcars, mtcars$mpg)
split(mtcars[,cyl], mtcars$mpg)
split(mtcars[,"cyl], mtcars$mpg)
""
""
split(mtcars[,"cyl"], mtcars$mpg)
sapply(split(mtcars[,"cyl"], mtcars$mpg),mean)
sapply(split(mtcars[,"mpg"], mtcars$cyl),mean)
sapply(split(mtcars[,"mpg"], c(4,5,6,7,8)),mean)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
mtcars[cyl=8]
mtcars[cyl=8,"hp"]
mtcars[cyl==8,"hp"]
mtcars[mtcars$cyl==8,"hp"]
mean(mtcars[mtcars$cyl==8,"hp"])
mean(mtcars[mtcars$cyl==4,"hp"])
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, 4), mean)
sapply(split(mtcars$hp, c(4,8)), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[8]
sapply(split(mtcars$hp, mtcars$cyl), mean)31] - sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[1])
c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[3])
z<-c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[3])
z[2]-z[1]
sapply(split(mtcars$hp, c(4,8)), avg)
colMeans(split(iris$Species),iris["Sepal.Length"])
colMeans(split((iris$Species),iris["Sepal.Length"])
=
)
split(iris$Species,iris["Sepal.Length"])
split(iris["Sepal.Length"],iris$Species)
sapply(split(iris["Sepal.Length"],iris$Species),means()
)
sapply(split(iris["Sepal.Length"],iris$Species),means)
sapply(split(iris["Sepal.Length"],iris$Species),mean)
split(iris["Sepal.Length"],iris$Species)
lapply(split(iris["Sepal.Length"],iris$Species),mean)
split(iris$Sepal.Length$,iris$Species)
split(iris$Sepal.Length,iris$Species)
sapply(split(iris$Sepal.Length,iris$Species),mean)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
z[2]-z[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429+82.63636
209.21429-82.63636
clear
cls
library(datasets)
iris
apply(iris[, 1:4], 2, mean)
tapply(iris$Sepal.Length,iris$Species,mean)
install.packages("swirl")
download.file("https://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip",method="curl")
download.file("https://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("http://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("http://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","museums.zip")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","camera.zip")
file.exists("camera.zip")
file.remove("camera.zip")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","camera.csv")
read.table(file = "camera.csv")
read.csv("camera.csv")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD","camera.xlsx")
library(xslx)
library("xslx")
library(xlsx)
library(package = xlsx)
library(package = xls)
library(package = xslx)
install.packages("xlsx")
library(package = xslx)
read.xlsx
read.xlsx
library(xlsx)
read.xlsx
cameraData <- read.xlsx("camera.xlsx",sheetIndex = 1)
cameraData
header(cameraData)
head(cameraData)
fiileUrl <-"http://www.w3schools.com/xml/simple.xml"
fileUrl <-"http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
library(xml)
install.packages("XML")
install.packages("XML")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("26062ebc492a514c4185", "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app("joaquinrodriguez70", "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app(appname = "courseratestWeek2", key = "joaquinrodriguez70", secret = "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app(appname = "courseratestWeek2", key = "joaquinrodriguez70", secret = "1b854af249b3f1a727bb308641c99b9a145a963e")
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repost", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install("swirl")
install.packages("swirl")
install.packages("manipulate")
install.packages("testthat")
install.packages("testthat")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("lazyeval")
install.packages("dplyr")
install.packages("lazyeval")
if (packageVersion("devtools") < 1.6) {
install.packages("devtools")
}
install.packages("devtools")
install.packages("lazyeval")
devtools::install_github("hadley/lazyeval")
install.packages('dplyr', type='source')
install.packages('lazyeval', type='source')
install.packages("lazyeval")
install.packages("manipulate")
install.packages("lazyeval")
install.packages('dplyr')
install.packages("Rcpp")
install.packages('dplyr')
install.packages("RMySQL")
install.packages("manipulate")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
path2csv
read.csv(path2csv, stringsAsFactors=FALSE)
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <-tbl_df(mydf)
rm("mydf")
cran
savehistory("~/Documents/historialR1.txt")
install.packages("XML")
source('~/Documents/week6/week6.r')
x<-createTidy()
source('~/Documents/week6/week6.r')
x<-createTidy()
setpwd("~/Documents/week6/UCI HAR Dataset/test")
setwd("~/Documents/week6/UCI HAR Dataset/test")
xsubj<-read.table("subject_test.txt")
names(xsubj)<-c("Subject")
x
xsubj
head(xsubj)
source('~/Documents/week6/week6.r')
x<-createTidy()
source('~/Documents/week6/week6.r')
x<-createTidy()
head(x)
source('~/Documents/week6/week6.r')
source('~/Documents/week6/week6.r')
x<-createTidy()
source('~/Documents/week6/week6.r')
x<-createTidy()
head(x)
source('~/Documents/week6/week6.r')
x<-createTidy()
head(x)
source('~/Documents/week6/week6.r')
x<-createTidy()
source('~/Documents/week6/week6.r')
x<-createTidy()
head(x)
source('~/Documents/week6/week6.r')
head(x)
x<-createTidy()
#df_data_test should have 2947 obs
#df_data_train should have 7352 obs
dplyr::glimpse(x)
x<-createTidy()
dplyr::glimpse(x)
View(xsubj)
View(xsubj)
View(xsubj)
View(xsubj)
rm(xsubj)
View(x)
getwd()
y<-read.csv("y_train")
y<-read.csv("y_train.txt")
head(y)
setwd("..")
getwd()
labels<-read.csv("activity_labels")
labels<-read.csv("activity_labels.txt")
head(labels)
