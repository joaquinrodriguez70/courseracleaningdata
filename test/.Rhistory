!is.null(cachedInvertedMatrix)
# return the (now) cached matrix
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
mymatr <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myccc <-makeCacheMatrix()
myccc$set(mymatr)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc$set(mymatr)
mymatr$get
mymatr$get()
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$get
myccc$get()
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc$getInverted()
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$getInverted()
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix()
myccc$set(mymatr)
myccc$getInverted()
myccc$getInverted()
myccc$getInverted()
myccc <-makeCacheMatrix(xxxxx)
xxxx
xxxxx
xxxxx
myccc <-makeCacheMatrix(xxxxx)
myccc$getInverted()
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myccc$getInverted()
myccc$getInverted()
myccc$getInverted()
inin<-myccc$getInverted()
myccc <-makeCacheMatrix(inin)
myccc$getInverted()
inin
inin$nrow
inin$nrows
inin.nrow
inin
attributes(inin)
inin$dim
inin.dim
inin$dim
attributes(inin)$dim
attributes(inin)$dim[1]
attributes(inin)$dim[1] = attributes(inin)$dim[2]
attributes(inin)$dim[1] == attributes(inin)$dim[2]
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3,0,0,4) ,nrow=4, ncol=3)
attributes(xxxxx)
myccc <-makeCacheMatrix(xxxxx)
myccc$set()
myccc$set(xxxxx)
myccc$get()
myccc$getInverted()
myccc$get()
n
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted()
myccc$getInverted(xxxxx)
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted(xxxxx)
myccc$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myccc <-makeCacheMatrix(xxxxx)
myccc$set(xxxxx)
myccc$getInverted()
function (a, b, ...)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
xxxxx <- matrix (c(1,0,0,0,2,0,0,0,3,0,0,4) ,nrow=4, ncol=3)
myccc <-makeCacheMatrix(xxxxx)
myccc$getInverted()
myccc$get()
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3
)
myCalculation <-makeCacheMatrix(myMatrix)
myCalculation$getInverted()
myCalculation$getInverted()
solve
solve()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
myCalculation <-makeCacheMatrix(myMatrix)
myCalculation$getInverted()
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
debug(cacheSolve)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheMatrix
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
debug(cacheSolve)
cacheSolve(cacheMatrix)
debug (makeCacheMatrix)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/Documents/week3/cache.R')
z<-c(1,2,3)
zvec<-makeVector(z)
cachemean(zvec)
cachemean(zvec)
cachemean(zvec)
source('~/Documents/week3/assig1/ProgrammingAssignment2/cachematrix.R')
myMatrix <- matrix (c(1,0,0,0,2,0,0,0,3) ,nrow=3, ncol=3)
cacheMatrix=makeCacheMatrix(myMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
library(datasets)
data(iris)
iris
head iris
head(iris)
? iris
colMeans(iris)
colMeans(iris["Sepal.Length"])
iris["Sepal.Length"]
mean(iris["Sepal.Length"])
means(iris["Sepal.Length"])
sum(iris["Sepal.Length"])
876.5/150
head(iris)
colmeans(iris)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
? mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
split(mtcars, mtcars$cyl,mtcars$mpg)
split(mtcars, mtcars$mpg)
split(mtcars[,cyl], mtcars$mpg)
split(mtcars[,"cyl], mtcars$mpg)
""
""
split(mtcars[,"cyl"], mtcars$mpg)
sapply(split(mtcars[,"cyl"], mtcars$mpg),mean)
sapply(split(mtcars[,"mpg"], mtcars$cyl),mean)
sapply(split(mtcars[,"mpg"], c(4,5,6,7,8)),mean)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
mtcars[cyl=8]
mtcars[cyl=8,"hp"]
mtcars[cyl==8,"hp"]
mtcars[mtcars$cyl==8,"hp"]
mean(mtcars[mtcars$cyl==8,"hp"])
mean(mtcars[mtcars$cyl==4,"hp"])
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, 4), mean)
sapply(split(mtcars$hp, c(4,8)), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[8]
sapply(split(mtcars$hp, mtcars$cyl), mean)31] - sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[1])
c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[3])
z<-c(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] , sapply(split(mtcars$hp, mtcars$cyl), mean)[3])
z[2]-z[1]
sapply(split(mtcars$hp, c(4,8)), avg)
colMeans(split(iris$Species),iris["Sepal.Length"])
colMeans(split((iris$Species),iris["Sepal.Length"])
=
)
split(iris$Species,iris["Sepal.Length"])
split(iris["Sepal.Length"],iris$Species)
sapply(split(iris["Sepal.Length"],iris$Species),means()
)
sapply(split(iris["Sepal.Length"],iris$Species),means)
sapply(split(iris["Sepal.Length"],iris$Species),mean)
split(iris["Sepal.Length"],iris$Species)
lapply(split(iris["Sepal.Length"],iris$Species),mean)
split(iris$Sepal.Length$,iris$Species)
split(iris$Sepal.Length,iris$Species)
sapply(split(iris$Sepal.Length,iris$Species),mean)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
z[2]-z[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429+82.63636
209.21429-82.63636
clear
cls
library(datasets)
iris
apply(iris[, 1:4], 2, mean)
tapply(iris$Sepal.Length,iris$Species,mean)
install.packages("swirl")
download.file("https://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip",method="curl")
download.file("https://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("http://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("http://data.baltimorecity.gov/download/vvwv-a7wn/application/zip","museums.zip")
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","museums.zip")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","camera.zip")
file.exists("camera.zip")
file.remove("camera.zip")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD","camera.csv")
read.table(file = "camera.csv")
read.csv("camera.csv")
download.file("http://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD","camera.xlsx")
library(xslx)
library("xslx")
library(xlsx)
library(package = xlsx)
library(package = xls)
library(package = xslx)
install.packages("xlsx")
library(package = xslx)
read.xlsx
read.xlsx
library(xlsx)
read.xlsx
cameraData <- read.xlsx("camera.xlsx",sheetIndex = 1)
cameraData
header(cameraData)
head(cameraData)
fiileUrl <-"http://www.w3schools.com/xml/simple.xml"
fileUrl <-"http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
library(xml)
install.packages("XML")
install.packages("XML")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("26062ebc492a514c4185", "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app("joaquinrodriguez70", "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app(appname = "courseratestWeek2", key = "joaquinrodriguez70", secret = "1b854af249b3f1a727bb308641c99b9a145a963e")
myapp <- oauth_app(appname = "courseratestWeek2", key = "joaquinrodriguez70", secret = "1b854af249b3f1a727bb308641c99b9a145a963e")
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repost", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install("swirl")
install.packages("swirl")
install.packages("manipulate")
install.packages("testthat")
install.packages("testthat")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("lazyeval")
install.packages("dplyr")
install.packages("lazyeval")
if (packageVersion("devtools") < 1.6) {
install.packages("devtools")
}
install.packages("devtools")
install.packages("lazyeval")
devtools::install_github("hadley/lazyeval")
install.packages('dplyr', type='source')
install.packages('lazyeval', type='source')
install.packages("lazyeval")
install.packages("manipulate")
install.packages("lazyeval")
install.packages('dplyr')
install.packages("Rcpp")
install.packages('dplyr')
install.packages("RMySQL")
install.packages("manipulate")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
path2csv
read.csv(path2csv, stringsAsFactors=FALSE)
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <-tbl_df(mydf)
rm("mydf")
cran
savehistory("~/Documents/historialR1.txt")
install.packages("XML")
setwd("~/Documents/week6/UCI HAR Dataset/test/Inertial Signals")
setwd("~/Documents/week6/UCI HAR Dataset/test/"
xtest <-read.csv("Xtest.csv")
xtest <-read.csv("X_test.csv")
xtest <-read.csv("X_test.txt")
list.files("")
list.files(path=".")
setwd("~/Documents/week6/UCI HAR Dataset/test/"
list.files(path=".")
setwd("~/Documents/week6/UCI HAR Dataset/test/")
list.files(path=".")
xtest<-read.table("X_test.txt")
head(xtest)
setwd("~/Documents/week6/UCI HAR Dataset")
list.files(path=".")
rownames<-read.table("features.txt")
rownames
[[rownames]]
[rownames]
rownames[[]]
rownames[]
as.list(rownames)
as.character(rownames)
as.vector(rownames)
rownames<-as.vector(read.table("features.txt"))
setwd("~/Documents/week6/UCI HAR Dataset")
setwd("~/Documents/week6/UCI HAR Dataset")
rownames<-as.vector(read.table("features.txt"))
setwd("~/Documents/week6/UCI HAR Dataset/test/")
xtest<-read.table("X_test.txt",row.names = rownames)
xtest<-read.table("X_test.txt")
colnames(xtest) <-rownames
head(xtest)
colnames(xtest)
rownames
colnames(xtest)[1]
colnames(xtest)[1][1]
colnames(xtest)$1
class(colnames(xtest))
class(rownames)
class(as.vector(rownames)
)
class(as.list(rownames)
)
class(as.list(rownames))
colnames(xtest) <-as.list(rownames)
head(xtest)
colnames(xtest)
as.list(rownames)
ccc<-as.list(rownames)
ccc
rm (rownames)
clear
setwd("~/Documents/week6/UCI HAR Dataset")
cccnames<-as.vector(read.table("features.txt"))
setwd("~/Documents/week6/UCI HAR Dataset/test/")
xtest<-read.table("X_test.txt")
xtest[1]
head(xtest[1])
colanme(xtest[1])
colnames(xtest[1])
colnames(xtest[])
colnames(xtest[]) <-cccnames
colnames(xtest[1])
colnames(xtest[1])cccnames[1]
colnames(xtest[1])<-cccnames[1]
colnames(xtest[1])
names(xtest[1]
)
names(xtest[1]) <-cccnames[1]
names(xtest[1])
names(xtest[1]) <-c("1111")
names(xtest[1])
names(xtest)
names(xtest)<- c("new_name", "another_new_name")
names(xtest)
names(xtest)<- cccnames
names(xtest)
cccnames
class(cccnames)
as.vector(class(cccnames))
as.vector(class(cccnames[1]))
as.list(class(cccnames[1]))
as.character(class(cccnames[1]))
cccnames[1]
cccnames[2]
cccnames[2,]
cccnames[2]
as.character(cccnames[2])
cccnames[[2]]
names(xtest)<-cccnames[[2]]
names(xtest)
names(xtest)<-cccnames[[2]]
head(xtest)
setwd("~/Documents/week6/UCI HAR Dataset")
cccnames<-read.table("features.txt")
setwd("~/Documents/week6/UCI HAR Dataset/test/")
xtest<-read.table("X_test.txt")
names(xtest)<-cccnames[[2]]
head(xtest)
names(xtest)
names(xtest)["mean"]
names(xtest)["*mean*"]
v.names <- c("Mean")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
xtest(,id.group)
xtest[],id.group]
xtest[,id.group]
head(xtest[,id.group])
cccnames
v.names <- c("*Mean*","*mean*")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
head(xtest[,id.group])
cccnames
patt <- sub(',\\s','|',(toString(v.names)))
v.names <- c("*Mean*","*mean*","*std*")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
v.names <- c("*Mean*","*mean*","*std*")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
v.names <- c("*Mean*","*mean*")
head(xtest[,id.group])
patt <- sub(',\\s','|',(toString(v.names)))
head(xtest[,id.group])
id.group <- grepl(patt,colnames(xtest))
patt
v.names <- c("Mean","mean")
patt
patt <- sub(',\\s','|',(toString(v.names)))
patt
id.group <- grepl(patt,colnames(xtest))
id.group
head(xtest[,id.group])
v.names <- c("Mean","mean","std")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
v.names <- c("Mean","mean")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
v.names <- c("Mean","mean","std")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
v.names <- c("std")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
head(xtest[,id.group])
attr
id.group
v.names <- c("Mean","mean")
patt <- sub(',\\s','|',(toString(v.names)))
id.group <- grepl(patt,colnames(xtest))
#head(xtest[,id.group])
v.names <- c("std")
patt <- sub(',\\s','|',(toString(v.names)))
id.group2 <- grepl(patt,colnames(xtest))
head(xtest[,id.group|id.group2])
xtest
